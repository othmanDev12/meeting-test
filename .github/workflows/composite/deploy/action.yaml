
name: "Deploy"
description: "Deploys custom docker container"

inputs:
  service_id:
    description: "Name of service to deploy"
    required: true
  workdir:
    description: "Workdir"
    required: true
  compose_dir:
    description: "Compose dir"
    required: true
  branch_name:
    description: "Branch name"
    required: true
  repository:
    description: "Repository name"
    required: true
  repository_key:
    description: "Repository private key"
    required: true
  ssh_key:
    description: "SSH private key"
    required: true
  ssh_host:
    description: "SSH hostname"
    required: true
  ssh_user:
    description: "SSH username"
    required: true
  registry_host:
    description: "Image registry host e.g. ghcr.io"
    required: true
  registry_username:
    description: "Registry username"
    required: true
  registry_password:
    description: "Registry password"
    required: true
  port:
    description: "port"
    required: true
  repo_source:
    description: "repo_source"
    required: true   
  repo_target:
    description: "repo_target"
    required: true       
  

runs:
  using: "composite"
  steps:

    - name: copy file via ssh key
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ inputs.ssh_host }}
        username: ${{ inputs.ssh_user }}
        port: 22
        key: ${{ inputs.ssh_key }}
        source: ${{ inputs.repo_source }}
        target: ${{ inputs.repo_target }} 

    - name: Configure SSH
      shell: bash
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/server.key
        chmod 600 ~/.ssh/server.key
        cat >>~/.ssh/config <<END
        Host server
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/server.key
          StrictHostKeyChecking no
        END
      env:
        SSH_KEY: ${{ inputs.ssh_key }}
        SSH_HOST: ${{ inputs.ssh_host }}
        SSH_USER: ${{ inputs.ssh_user }}

    - name: Deploy App
      shell: bash
      run: >
        ssh server << EOF
          echo ${{ inputs.registry_password }} | docker login ${{ inputs.registry_host }} -u ${{ inputs.registry_username }} --password-stdin
          cd $WORKDIR
          docker-compose -f ${{ inputs.compose_dir }} pull
          docker-compose -f ${{ inputs.compose_dir }} up -d
        EOF
      env:
        WORKDIR: ${{ inputs.workdir }}
        REPO_PRIVATE_KEY: /tmp/${{ github.run_id }}.key
