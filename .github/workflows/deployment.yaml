
name: nodejs app Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      
env:
  IMAGE_TAG: dev
  BRANCH_NAME: main
  SERVICE_NAME: meet-back
  COMPOSE_DIR: docker-compose.yaml
  WORKDIR: ~/github_actions/meet-backend
  REPO_SOURCE: docker-compose.yaml
  REPO_TARGET: /home/ubuntu/github_actions/meet-backend


jobs:

  builder:
    name: "Build & Push docker image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/docker
        with:
          image_name: ${{ secrets.REGISTRY_ENDPOINT }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }}
          service_name: ${{ env.SERVICE_NAME }}
          build_context: ${{ env.BUILD_CONTEXT }}
          registry_host: ${{ secrets.REGISTRY_HOST }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: "Deploy To Server"
    runs-on: ubuntu-latest
    needs: [ builder ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/deploy
        with:
          service_id: ${{ env.SERVICE_ID }}
          workdir: ${{ env.WORKDIR }}
          compose_dir: ${{ env.COMPOSE_DIR }}
          repository: ${{ github.repository }}
          repository_key: ${{ secrets.REPOSITORY_PRIVATE_KEY }}
          branch_name: ${{ env.BRANCH_NAME }}
          ssh_key: ${{ secrets.CLOUD_PEAQOCK_SSH_KEY }} 
          ssh_host: ${{ secrets.CLOUD_PEAQOCK_HOST }}
          ssh_user: ${{ secrets.CLOUD_PEAQOCK_USER }}
          registry_host: ${{ secrets.REGISTRY_HOST }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          repo_source:  ${{ env.REPO_SOURCE }}
          repo_target:  ${{ env.REPO_TARGET }}
